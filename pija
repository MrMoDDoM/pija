#!/usr/bin/env python2

import os
import os.path
import argparse
import time
from termcolor import colored

#from analizer import analize

from analizer import *


html_start="<html><body><h1>Pija result</h1><br><br>"
html_end="</body></html>"
html_img_start="<img src=\""
html_img_end="\" height=\"500\" width=\"500\" />"

parser = argparse.ArgumentParser(description='Analize media files for detecting pornography.')

parser.add_argument('files', metavar='file', type=str, nargs='+',
                    help='File to analize.')

parser.add_argument('-sp', metavar='perc.', default='15', type=int,
                    help='The percentage of skin to determinate a positive.')

parser.add_argument('-op', action='store_const', const=True, default=False,
                    help='Show only positive file')

parser.add_argument('-F', action='store_const', const=True, default=False,
                    help='Write output to file.')

parser.add_argument('-R', action='store_const', const=True, default=False,
                    help='Analize recursively.')

parser.add_argument('-L', action='store_const', const=True, default=False,
                    help='Follow symbolic links.')

parser.add_argument('-c', metavar='folder', action='store',
                    help='Folder where will be copied positive file')

args = parser.parse_args()

def printHTML(result):
    try:
        #out_file = open("Pija Result "+ time.strftime("%c")+".html","w")
        out_file = open("Pija_Result.html","w")
    except IOError:
        print "Error writing HTML output file! Do we have the rigth permissions?"

    out_file.write(html_start)
    for result_list in result:
        if result_list[1]:
            out_file.write("<hr><br>"+result_list[0]+"<br>")
            out_file.write(html_img_start)
            out_file.write(result_list[0])
            out_file.write(html_img_end)

    out_file.write(html_end)
    out_file.close()

def printTerminal(results):
    for result_list in results:
        if result_list[1]:
            print result_list[0] + ": " + colored(';D', 'green', attrs=['bold'])
        else:
            print result_list[0] + ": " + colored(':(', 'red')


def printInfo(str_out):
    print colored('[INFO] ' + str_out, 'green')

def print_result(results):
    if args.F:
        printHTML(results)
    else:
        printTerminal(results)

printInfo("Skin percentage set to: " + str(args.sp) + "%")

for file_ in args.files:
    results = []

    file_ = os.path.expanduser(file_)

    if not os.path.exists(file_):
        print file_ + " doesn't exist."
        continue

    if not os.access(file_, os.R_OK):
        print file_ + " can't be read."
        continue

    if os.path.isdir(file_) and not args.R:
        print file_ + " is a folder, see -R option."
        continue

    if os.path.isdir(file_):
        printInfo("Counting file, please wait...")
        printInfo(str(count_file(file_, args.L)) + " will be analized...")
        for (dirpath, _, filenames) in os.walk(file_, True, None, args.L):
            for name in filenames:
                path = dirpath + '/' + name
                analize_result = analize(path,args.sp)
                results.append([path, analize_result[0], analize_result[1]])
        print_result(results)
    else:
        analize_result = analize(file_,args.sp)
        print_result([[file_, analize_result[0], analize_result[1]]]) #this is a list of list - we are using this hack to maitain compatibility with the folder cases